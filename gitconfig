# Global aliases suitable for /etc/gitconfig

[alias]
        # Log aliases
	lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) (%an)%Creset' --abbrev-commit --date=relative
	llg = log --graph --pretty=format:'%Cred%H%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) (%an)%Creset' --date=relative

        # Last 5 commits (!git llg -n 5)
        llg5 = log --graph --pretty=format:'%Cred%H%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --date=relative -n 5
        # Last commit
        l = log --name-status HEAD^..HEAD --summary

        # Unpushed changes
        up = !GIT_CURRENT_BRANCH=$(git name-rev --name-only HEAD) && git log origin/$GIT_CURRENT_BRANCH..$GIT_CURRENT_BRANCH
        unpushed = !git up --oneline

        # Diff with whitespace ignored
        dw = diff --ignore-space-at-eol --ignore-all-space --ignore-space-change

        # Show tracking branches
        trackbranch = for-each-ref --format='%(refname:short) <- %(upstream:short)' refs/heads

        # Interactive stash
        interactivestash = stash save --patch

        sl=stash list --pretty=format:'%C(yellow)%gd(%cr)%Creset: %gs'

        # Short git remote / status / branch
        s = status -sb
        r = remote -v
        b = branch -av

        # Show the commit a tag is pointing at.
        tagcommit = "!f() { git rev-parse --verify $1^{commit}; }; f"

        # Show what changes there are in the tracking branch.
        changes = "!f() { [[ -z \"$1\" ]] && o=origin || o=$1 ; git remote update $o ; echo Changes... ; git llg `git symbolic-ref --short HEAD`..$o/`git symbolic-ref --short HEAD` ; }; f"
